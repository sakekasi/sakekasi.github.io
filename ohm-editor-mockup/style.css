@import url("fonts/fonts.css");

body{
  width: 500px;
  font-family: "aleo", serif;
  line-height: 1.3;
  font-kerning: normal;
  font-size: 15px;
}

input {
  -moz-appearance: none;
  -webkit-appearance: none;
  -o-appearance: none;
  appearance: none;

  outline: none;
  box-shadow: none;

  border: none;

  border-bottom: 1px solid black;
  padding-left: 5px;
  padding-right: 5px;
  padding-bottom: 10px;
}

grammar > name, semantics > name {
  font-size: 18px;
  font-style: italic;
  font-weight: bold;
}

comment {
  padding: 20px;
  display: block;
  font-family: "aleo light", serif;
  font-style: italic;
  font-size: 12px;
  width: calc(100% - 40);
  word-wrap: break-word;
}

columns {
  display: flex;
  flex-direction:row;
  width: 700px;
}

column {
  display: block;
  height: 100%;
  min-width: 400px;
  padding-left: 0px;
  padding-top: 20px;

  transition: filter 0.5s ease;
  -o-transition: -o-filter 0.5s ease;
  -moz-transition: filter 0.5s ease;
  -webkit-transition: -webkit-filter 0.5s ease;

  filter: saturate(50%);
  -o-filter: saturate(50%);
  -moz-filter: saturate(50%);
  -webkit-filter: saturate(50%);
}

column:hover {
    filter: saturate(100%);
    -o-filter: saturate(100%);
    -moz-filter: saturate(100%);
    -webkit-filter: saturate(100%);
}

column#examples {
  display: block;
  flex-direction: column;
  padding-right: 15px;
}

examples, relevantexamples, generatedexamples {
  display: flex;
  flex-direction: column;
  width: 100%;
}

rule choice:hover,
rule choice.hover,
rule.hover,
rule.hover.parentHover {
  background-color: hsla(49,80%,92%,1) !important;
}

rule.parentHover {
  background-color: hsl(0, 0%, 97%) !important;
}

action:hover,
action.hover {
  background-color: hsla(49,80%,92%,1) !important;
  transform: scale(1.0);
  -webkit-transform: scale(1.0);
  -o-transform: scale(1.0);
  -moz-transform: scale(1.0);
  z-index: 1;
  opacity: 0.9;
}

action {
  transform-origin: 0 0;
  transform: scale(0.8);
  -webkit-transform: scale(0.8);
  -o-transform: scale(0.8);
  -moz-transform: scale(0.8);
  z-index: 0;
}

action {
  font-size: 13px;
  font-family: "input serif compressed", monospace;
  display: block;
  white-space: pre;
  position: relative;
  top: 0;
  transition: top 0.1s, background-color 0.1s, transform 0.1s;
  transition-timing-function: ease;
  /*transition: transform 0.2s ease;
  transition: top 0.2s ease;*/
  padding-left:  10px;
  padding-top: 5px;
  margin-bottom: 10px;
  padding-bottom: 5px;
  width: inherit;
}

action.last {
  margin-bottom: 10px;
}

action op {
  color: hsl(219, 25%, 55%);
  font-weight: normal;
}

action e {
  color: hsla(243, 64%, 70%, 1);
}


super::before {
  content: '\25C1';
  padding-left: 3pt;
  padding-right: 3pt;
}

grammar {
  display: block;
}

/*syntactic elements (e.g. =, |, etc)*/

ruleDefineBody > alt > choice:first-child::before,
ruleOverrideBody > alt > choice:first-child::before,
ruleExtendBody > alt > choice:first-child::before,
grammar > rules::before,
grammar > rules::after,
super::before,
choice::before {
  color: hsl(0, 0%, 70%);
}

ruleDefineBody > alt > choice:first-child::before,
ruleOverrideBody > alt > choice:first-child::before,
ruleExtendBody > alt > choice:first-child::before,
grammar > rules::before,
grammar > rules::after,
super::before,
choice::before,
star::after,
plus::after,
lookahead::before,
not::before,
paren::before,
paren::after {
  font-weight: bold;
}

grammar > rules::before {
  content: ' {';
}

grammar > rules::after {
  display: block;
  content: '}';
}

rule {
  display: block;
  margin-left: 10pt;
}

rule > name {
  color: hsl(0, 0%, 50%);
  font-weight: bold;
  font-size: 16px;
}

caseName {
  color: hsl(219, 58%, 70%);
  font-style: italic;
}

description::before {
  content: '(';
  padding-left: 10pt;
}

description::after {
  content: ')';
}

caseName::before {
  content: '\2014';
  padding-left: 10pt;
  padding-right: 4pt;
}

rule {
  margin-top: 12pt;
  margin-bottom: 12pt;
  /* padding-left:  10px; */
}

alt {
  font-size: 15px;
  width:  100%;
  /* display: inline-block; */
}

ruleDefineBody,
ruleOverrideBody,
ruleExtendBody {
  display: block;
}

ruleDefineBody > alt,
ruleOverrideBody > alt,
ruleExtendBody > alt {
  display: flex;
  border-collapse: collapse;
  flex-direction: column;
}

ruleDefineBody > alt > choice,
ruleOverrideBody > alt > choice,
ruleExtendBody > alt > choice {
  display: flex;
  flex-direction: row;
}

choice {
  display: inline;
  width: calc(100% - 10);
  /* float:  left; */
  align-content: stretch;
  margin-left:  10px;
  /* align-items: initial; */
}

ruleDefineBody > alt > choice > *,
ruleOverrideBody > alt > choice > *,
ruleExtendBody > alt > choice > * {
  display: table-cell;
}

description {
  display: inline-block;
  font-style: italic;
  color: hsla(219,61%,34%,1);
}

ruleDefineBody > alt::before,
ruleOverrideBody > alt::before,
ruleExtendBody > alt::before {
  display: none;
}

ruleDefineBody > *:first-child::before,
ruleOverrideBody > *:first-child::before,
ruleExtendBody > *:first-child::before,
ruleDefineBody > alt > choice:first-child::before,
ruleOverrideBody > alt > choice:first-child::before,
ruleExtendBody > alt > choice:first-child::before {
  display: inline-block;
  /*font-family: Monaco;*/
  text-align: right;
  width: 20pt;
  margin-right: 6pt;
}

ruleDefineBody > alt:first-child::before,
ruleOverrideBody > alt:first-child::before,
ruleExtendBody > alt:first-child::before {
  display: none;
}

ruleDefineBody > *:first-child::before,
ruleDefineBody > alt > choice:first-child::before {
  content: '=';
}

ruleOverrideBody > *:first-child::before,
ruleOverrideBody > alt > choice:first-child::before {
  content: ':=';
}

ruleExtendBody > *:first-child::before,
ruleExtendBody > alt > choice:first-child::before {
  content: '+=';
}

ruleDefineBody > alt > choice::before,
ruleOverrideBody > alt > choice::before,
ruleExtendBody > alt > choice::before {
  display: inline-block;
  text-align: right;
  width: 20pt;
  margin-left: 0;
  margin-right: 6pt;
}

choice:first-child::before {
  content: '';
  margin-left: 0;
  margin-right: 0;
}

choice::before {
  content: '|';
  margin-left: 2pt;
  margin-right: 2pt;
}

bind > name {
  margin-left: 1pt;
  vertical-align: sub;
  font-size: 75%;
  color: hsl(0, 0%, 70%);
}

app {
}

seq > * {
  margin-left: 2pt;
  margin-right: 2pt;
}

seq > *::first-child {
  margin-left: 0;
}

seq > *::last-child {
  margin-right: 0;
}

star::after {
  content: '*';
}

plus::after {
  font-size: 75%;
  vertical-align: super;
  content: '+';
}

lookahead::before {
  content: '&';
}

not::before {
  content: '~';
}

paren::before {
  content: '(';
}

paren::after {
  content: ')';
}

arr::before,
arr::after {
  /*font-family: Monaco;*/
}

arr::before {
  content: '[';
}

arr::after {
  content: ']';
}

grammar str::before,
grammar string::before {
  content: "\201C";
}

grammar str::after,
grammar string::after {
  content: "\201D";
}

prim {
  font-family: Monaco;
  _font-size: 85%;
}

grammar string::before,
grammar string::after,
grammar str::before,
grammar str::after {
  /*font-family: "PT Sans", Arial, Helvetica, sans-serif;*/
  color: hsl(0, 0%, 70%);
}

grammar string {
  /*font-family: Monaco;*/
  font-weight: bold;
  color: hsl(0, 0%, 35%);
}

specialChar {
  color: hsl(248, 30%, 30%);
}

charClass {
  /*font-family: Monaco;*/
  _font-size: 85%;
}

charClass::after {
  /*font-family: "PT Sans", Arial, Helvetica, sans-serif;*/
  font-size: 50%;
  font-style: italic;
  vertical-align: super;
  content: 'RE';
}

/*SEMANTICS STYLING*/
semantics keyword,
semantics punctuator,
semantics string {
  font-weight: bold;
}

semantics punctuator {
  color: hsla(162, 0%, 66%, 1);
}

semantics keyword {
  color: hsla(162, 0%, 33%, 1);
}


semantics {
    width: initial;
    display:  block;
}


column#semantics {
    /* margin-right: -80px; */
}

input#exampleInput {
    font-family: inherit;
    font-size: 18px;
    font-weight: bold;
    width: 100%;
}

h4 {
    font-style: italic;
    font-weight: normal;
    font-size: 17px;
    margin-bottom: 5px;
}

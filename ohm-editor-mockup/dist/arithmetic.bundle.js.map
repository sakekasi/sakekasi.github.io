{"version":3,"sources":["webpack:///./src/arithmetic/index.js","webpack:///./src/exampleGeneration/exampledb.js","webpack:///./src/exampleGeneration/example.js","webpack:///./src/arithmetic/interpret.js","webpack:///./src/exampleGeneration/generators.js","webpack:///./src/exampleGeneration/diversity.js"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;;;;;;;;;;;ACFA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,EAAC;AACD;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAO;AACP,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,IAAG;AACH,EAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;;;;;;;;AC1IA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA,mCAAkC,uBAAuB;AACzD;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;ACrBA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,EAAC;AACD;AACA;;AAEA,kBAAiB;;AAEjB;AACA;AACA;AACA,4BAA2B;AAC3B,MAAK;;AAEL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,SAAQ;;AAER,yCAAwC,sBAAsB,EAAE;AAChE,yCAAwC,sCAAsC,EAAE;AAChF,yCAAwC,sCAAsC,EAAE;AAChF,yCAAwC,sBAAsB,EAAE;AAChE,yCAAwC,+CAA+C,EAAE;AACzF,yCAAwC,sBAAsB,EAAE;AAChE,yCAAwC,sBAAsB,EAAE;AAChE,yCAAwC,sBAAsB,EAAE;AAChE,yCAAwC,uBAAuB,EAAE;;AAEjE;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;;;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAC;AACD;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,GAAG,KAAK,GAAG;AACxB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,GAAG,KAAK,GAAG;AACxB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa,GAAG,GAAG,GAAG;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa,GAAG,GAAG,GAAG;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAa,GAAG,GAAG,GAAG;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAc,IAAI;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAe,OAAO;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAe,OAAO;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAiB,YAAY,WAAW,GAAG;AAC3C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAc,qBAAqB;;AAEnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAkB,SAAS;AAC3B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,IAAG;AACH,EAAC;;;;;;;ACrdD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;;;;;AAKA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG,OAAO;AACV;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAc,UAAU;AACxB;AACA;;AAEA;AACA;AACA","file":"arithmetic.bundle.js","sourcesContent":["require('../interaction.js');\nrequire('../exampleGeneration/exampledb.js');\nrequire('../exampleGeneration/generators.js');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/arithmetic/index.js\n ** module id = 0\n ** module chunks = 0\n **/","'use strict';\n\nvar $ = require(\"jquery\"),\n    language = require(\"../language.js\"),\n    makeExample = require(\"./example.js\"),\n    registerInterpret = require(\"../arithmetic/interpret.js\").registerInterpret;\n\nvar examples = {};\n\nif(typeof module !== \"undefined\" && typeof module.exports !== \"undefined\"){\n  module.exports = examples;\n} else {\n  window.EXAMPLES = examples;\n}\n\n\nvar examplesSeen = new Set();\n\nfunction inferExamples(example){\n  if(!examplesSeen.has(example)){\n    var match = language.grammar.match(example);\n    language.semantics(match).addExamples();\n    examplesSeen.add(example);\n  }\n}\n\nfunction exampleAdded(example){\n  inferExamples(example);\n  var exampleNode = makeExample(example);\n  document.querySelector(\"examples\").appendChild(exampleNode);\n}\n\n//UTILS\nfunction getWithInit(object, key, defaultValue){\n  if(!object.hasOwnProperty(key)){\n    object[key] = defaultValue;\n  }\n\n  return object[key];\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", function(){\n   registerInterpret(language.semantics);\n\n   language.semantics.addOperation(\"addExamples\", {\n    _nonterminal(children){\n      getWithInit(module.exports, this._node.ctorName, new Set()).add(\n        this.interval.contents\n      );\n\n      children.forEach((child)=>{\n        child.addExamples();\n      });\n    },\n    _terminal(){\n      getWithInit(module.exports, this._node.ctorName, new Set()).add(\n        this.interval.contents\n      );\n    }\n  });\n\n  document.querySelector(\"input#exampleInput\").addEventListener(\"keyup\", function(e){\n    if(e.code === \"Enter\"){\n      var example = document.querySelector(\"#exampleInput\").value;\n      exampleAdded(example);\n      document.querySelector(\"#exampleInput\").value = \"\";\n    }\n  });\n\n  var examples = [\n    \"a + b * c ^ d - -e\",\n    \"pi * (r ^ 2)\",\n    \"12 + 34 ^ + 55\",\n    \"test / 0\",\n    \"3.14159265\"\n  ];\n  for(let example of examples){\n    exampleAdded(example);\n  }\n\n  setRelevantExamples(\"Exp\");\n\n  $('rule choice').mouseover(function(){\n    let ruleName = $(this).closest('rule').children('name').text();\n    let caseName = $(this).find('casename');\n    if(caseName.length > 0){\n      ruleName += \"_\"+caseName.text();\n    } else if($(this).closest('rule').find('alt').get()[0].children.length > 1){\n      ruleName = $(this).find('app').text();\n    }\n\n    setRelevantExamples(ruleName);\n    // setGeneratedExamples(ruleName);\n  })\n\n  $('rule > name').mouseover(function(){\n    let ruleName = $(this).text();\n    setRelevantExamples(ruleName);\n    // setGeneratedExamples(ruleName);\n  })\n\n  $('action').mouseover(function(){\n    let ruleName = $(this).attr('ruleId');\n    setRelevantExamples(ruleName);\n  });\n});\n\nfunction setRelevantExamples(ruleName){\n  let relevantExamples = examples[ruleName];\n  let node = document.querySelector('relevantexamples');\n\n  while (node.hasChildNodes()) {\n    node.removeChild(node.lastChild);\n  }\n\n  if(relevantExamples){\n    for(let example of relevantExamples){\n      node.appendChild(makeExample(example));\n    }\n  }\n}\n\n\nfunction getExampleString(){\n  return JSON.stringify(\n    examples,\n    function(k, v){\n      if(v instanceof Set){\n        var a = [];\n        for(var item of v){\n          a.push(item);\n        }\n        return a;\n      }\n      return v;\n    },\n    '  '\n  );\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/exampleGeneration/exampledb.js\n ** module id = 9\n ** module chunks = 0\n **/","var language = require('../language.js'),\n    chroma = require(\"chroma-js\");\n\n\nfunction renderExample(exampleStr){\n  let example = document.createElement('example');\n  example.textContent = exampleStr;\n\n  try{\n    let match = language.grammar.match(exampleStr);\n    let interpreted = language.semantics(match).interpret();\n    // example.textContent += ` ${interpreted.toString()}`;\n    example.style.color = chroma(\"green\").css(\"hsl\");\n  }catch (e){\n    console.log(e);\n    example.style.color = chroma(\"red\").css(\"hsl\");\n  }\n\n  return example;\n}\n\nmodule.exports = renderExample;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/exampleGeneration/example.js\n ** module id = 12\n ** module chunks = 0\n **/","'use strict';\n\nvar toExport = {\n  registerInterpret\n};\n\nif(typeof module !== \"undefined\" && typeof module.exports !== \"undefined\"){\n  module.exports = toExport;\n} else {\n  Object.assign(window, toExport);\n}\n\nvar constants = {pi: Math.PI, e: Math.E};\n\nfunction registerInterpret(semantics){\n  semantics.addOperation('interpret', {\n    Exp: function(e) {\n      return e.interpret();  // Note that operations are accessed as methods on the CST nodes.\n    },\n\n    AddExp: function(e) {\n      return e.interpret();\n    },\n    AddExp_plus: function(x, _, y) {\n      return x.interpret() + y.interpret();\n    },\n    // AddExp_minus: function(x, _, y) {\n    //   return x.interpret() - y.interpret();\n    // },\n\n    MulExp:        function(e)         { return e.interpret(); },\n    MulExp_times:  function(x, _, y)   { return x.interpret() * y.interpret(); },\n    MulExp_divide: function(x, _, y)   { return x.interpret() / y.interpret(); },\n    ExpExp:        function(e)         { return e.interpret(); },\n    ExpExp_power:  function(x, _, y)   { return Math.pow(x.interpret(), y.interpret()); },\n    PriExp:        function(e)         { return e.interpret(); },\n    PriExp_paren:  function(_l, e, _r) { return e.interpret(); },\n    PriExp_pos:    function(_, e)      { return e.interpret(); },\n    PriExp_neg:    function(_, e)      { return -e.interpret(); },\n\n    ident: function(_l, _ns) {\n      return constants[this.interval.contents] || 0;\n    },\n    number: function(_) {\n      return parseFloat(this.interval.contents);\n    }\n  });\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/arithmetic/interpret.js\n ** module id = 13\n ** module chunks = 0\n **/","'use strict';\nvar EXAMPLES = require(\"./exampledb.js\"),\n    $ = require(\"jquery\"),\n    makeExample = require(\"./example.js\"),\n    language = require('../language.js'),\n    diversity_fns = require(\"./diversity.js\");\n\nlet diversity = diversity_fns.diversity;\nlet distance_pq = diversity_fns.distance_pq;\n\nlet GENERATORS = {\n  Exp,\n  AddExp,\n  AddExp_plus,\n  AddExp_minus,\n  MulExp,\n  MulExp_times,\n  MulExp_divide,\n  ExpExp,\n  ExpExp_power,\n  PriExp,\n  PriExp_paren,\n  PriExp_pos,\n  PriExp_neg,\n  ident,\n  number,\n  number_whole,\n  number_fract\n};\n\nif(typeof module !== \"undefined\" && typeof module.exports !== \"undefined\"){\n  module.exports = GENERATORS;\n} else {\n  window.GENERATORS = GENERATORS;\n}\n\nfunction* Exp(es){\n  var seen = new Set();\n  for(let e of shuffleGen(es, seen)){\n    yield e;\n  }\n\n  for(let exp of AddExp([])){\n    yield exp;\n  }\n}\n\nfunction* AddExp(aes){\n  var seen = new Set();\n  for(let ae of shuffleGen(aes, seen)){\n    yield ae;\n  }\n\n  for(let addexp of stochasticChooseGen(\n    AddExp_plus([]),\n    AddExp_minus([]),\n    MulExp([])\n  )){\n    yield addexp;\n  }\n}\n\n\nfunction* AddExp_plus(aes){\n  var seen = new Set();\n  for(let ae of shuffleGen(aes, seen)){\n    yield ae;\n  }\n\n  for(let [ae, me] of arrayInfGen(\n    AddExp(EXAMPLES.AddExp),\n    MulExp([]))){\n    yield `${ae} + ${me}`;\n  }\n}\n\nfunction* AddExp_minus(aes){\n  var seen = new Set();\n  for(let ae of shuffleGen(aes, seen)){\n    yield ae;\n  }\n\n  for(let [ae, me] of arrayInfGen(\n    AddExp(EXAMPLES.AddExp),\n    MulExp([]))){\n    yield `${ae} - ${me}`;\n  }\n}\n\nfunction* MulExp(mes){\n  var seen = new Set();\n  for(let me of shuffleGen(mes, seen)){\n    yield me;\n  }\n\n  for(let mulexp of stochasticChooseGen(\n    MulExp_times([]),\n    MulExp_divide([]),\n    ExpExp([])\n  )){\n    yield mulexp;\n  }\n}\n\nfunction* MulExp_times(mes){\n  var seen = new Set();\n  for(let me of shuffleGen(mes, seen)){\n    yield me;\n  }\n\n  for(let [me, ee] of arrayInfGen(\n    MulExp(EXAMPLES.MulExp),\n    ExpExp([])\n  )){\n    yield `${me}*${ee}`;\n  }\n}\n\nfunction* MulExp_divide(mes){\n  var seen = new Set();\n  for(let me of shuffleGen(mes, seen)){\n    yield me;\n  }\n\n  for(let [me, ee] of arrayInfGen(\n    MulExp(EXAMPLES.MulExp),\n    ExpExp([])\n  )){\n    yield `${me}/${ee}`;\n  }\n}\n\nfunction* ExpExp(ees){\n  var seen = new Set();\n  for(let ee of shuffleGen(ees, seen)){\n    yield ee;\n  }\n\n  for(let expexp of stochasticChooseGen(\n    ExpExp_power([]),\n    PriExp([])\n  )){\n    yield expexp;\n  }\n}\n\nfunction* ExpExp_power(ees){\n  var seen = new Set();\n  for(let ee of shuffleGen(ees, seen)){\n    yield ee;\n  }\n\n  for(let [pe, ee] of arrayInfGen(PriExp([]), ExpExp(EXAMPLES.ExpExp))){\n    yield `${pe}^${ee}`;\n  }\n}\n\nfunction* PriExp(pes){\n  var seen = new Set();\n  for(let pe of shuffleGen(pes, seen)){\n    yield pe;\n  }\n\n  for(let priexp of stochasticChooseGen(\n    PriExp_paren([]),\n    PriExp_pos([]),\n    PriExp_neg([]),\n    ident([]),\n    number([])\n  )){\n    yield priexp;\n  }\n}\n\nfunction* PriExp_paren(pes){\n  var seen = new Set();\n  for(let pe of shuffleGen(pes, seen)){\n    yield pe;\n  }\n\n  for(let exp of Exp(EXAMPLES.Exp)){\n    yield `(${exp})`;\n  }\n}\n\nfunction* PriExp_pos(pes){\n  var seen = new Set();\n  for(let pe of shuffleGen(pes, seen)){\n    yield pe;\n  }\n\n  for(let priexp of PriExp(EXAMPLES.PriExp)){\n    yield `+ ${priexp}`;\n  }\n}\n\nfunction* PriExp_neg(pes){\n  var seen = new Set();\n  for(let pe of shuffleGen(pes, seen)){\n    yield pe;\n  }\n\n  for(let priexp of PriExp(EXAMPLES.PriExp)){\n    yield `- ${priexp}`;\n  }\n}\n\nfunction* ident(idents){\n  var seen = new Set();\n  for(let ident of shuffleGen(idents, seen)){\n    yield ident;\n  }\n\n  for(let ident of concatInfGen(cycleGen(letter, EXAMPLES.letter),\n                                 starGen(alnum, EXAMPLES.alnum))){\n    yield ident;\n  }\n}\n\nfunction* number(numbers){\n  var seen = new Set();\n  for(let number of shuffleGen(numbers, seen)){\n    yield number;\n  }\n\n  for(let priexp of stochasticChooseGen(\n    number_whole([]),\n    number_fract([])\n  )){\n    yield priexp;\n  }\n}\n\nfunction* number_whole(numbers, numDigits = 1){\n  var seen = new Set();\n  for(let number of shuffleGen(numbers, seen)){\n    yield number;\n  }\n\n  for(let number of starGen(digit, EXAMPLES.digit, numDigits)){\n    yield number;\n  }\n}\n\nfunction* number_fract(numbers, numDigits = 1){\n  var seen = new Set();\n  for(let number of shuffleGen(numbers, seen)){\n    yield number;\n  }\n\n  for(let number of concatInfGen(\n    starGen(digit, EXAMPLES.digit),\n    (function*(){while(true){ yield \".\"; }})(),\n    starGen(digit, EXAMPLES.digit, numDigits)\n  )){\n    yield number;\n  }\n}\n\nfunction* digit(digits){\n  var seen = new Set();\n  for(let digit of shuffleGen(digits, seen)){\n    yield digit;\n  }\n}\n\nfunction* alnum(alnums){\n  var seen = new Set();\n  for(let alnum of shuffleGen(alnums, seen)){\n    yield alnum;\n  }\n}\n\nfunction* letter(letters){\n  var seen = new Set();\n  for(let letter of shuffleGen(letters, seen)){\n    yield letter;\n  }\n}\n\n\n//UTILS\n\nfunction* stochasticChooseGen(...gens){\n  let weights = gens.map(()=>1);\n  while(true){\n    let sum = weights.reduce((a, b)=> a+b);\n\n    let choice = Math.random()*sum;\n    let i;\n    for(i = 0; choice > weights[i]; choice -= weights[i++]){}\n\n    weights[i] /= 2;\n    yield gens[i].next().value;\n  }\n}\n\nfunction* arrayInfGen(...gens){\n  while(true){\n    yield gens.map(g=>g.next().value);\n  }\n}\n\nfunction* concatInfGen(...gens){\n  for(let items of arrayInfGen(...gens)){\n    yield items.join(\"\");\n  }\n}\n\nfunction* cycleGen(genfn, samples){\n  while(true){\n    let current = genfn(samples);\n    for(let example of current){\n      yield example;\n    }\n  }\n}\n\nfunction* starGen(genfn, samples, num = 0){\n  while(true){\n    if(num === 0){\n      yield \"\";\n      num++;\n      continue;\n    }\n\n    let currentGenerators = [];\n    for(let i = 0; i < num; i++){\n      currentGenerators.push(genfn(samples));\n    }\n\n    let currentValues = currentGenerators.map(g=>g.next());\n    while(!currentValues[0].done){\n      let example = currentValues.map(i=>i.value).join(\"\");\n      yield example;\n      currentValues = currentGenerators.map(g=>g.next());\n    }\n\n    num++;\n  }\n}\n\nfunction* shuffleGen(items, seen){\n  if(items instanceof Set){\n    items = [...items];\n  }\n\n  items = shuffle(items);\n\n  for(let item of items){\n    seen.add(item);\n    yield item;\n  }\n}\n\nfunction shuffle(array) {\n  array = array.slice();\n  var currentIndex = array.length, temporaryValue, randomIndex;\n\n  // While there remain elements to shuffle...\n  while (0 !== currentIndex) {\n\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n}\n\n//DOM STUFF\nfunction setGeneratedExamples(ruleName){\n  console.log(ruleName);\n  let generator = GENERATORS[ruleName]([]);\n  let node = document.querySelector('generatedexamples');\n  node.textContent = \"\";\n  if(generator){\n    let diverseExamples = [];\n    let averageDiversity = 0;\n    let numSeen = 0;\n    while(numSeen < 50){\n      let size = diverseExamples.length;\n      let example = generator.next().value;\n      let exampleCST;\n      let match;\n\n      match = language.grammar.match(example, ruleName);\n      exampleCST = match._cst;\n      exampleCST.originalText = example;\n\n      let exampleDiversity=0;\n      if(size > 0){\n        exampleDiversity = diversity(example, diverseExamples, \"ctorName\");\n        exampleCST.diversity = exampleDiversity;\n      }\n\n      if(size === 0 || exampleDiversity > averageDiversity){\n        if(size >= 10){\n          let leastDiversity = diverseExamples.reduce((a, b)=> a.diversity < b.diversity? a: b);\n          averageDiversity -= leastDiversity.diversity / diverseExamples.length;\n          diverseExamples.forEach((example)=>{\n            example.diversity -=\n              // Math.pow(distance_pq(leastDiversity, example, \"ctorName\"), 2) /\n              leastDiversity.diversity / diverseExamples.length;\n          });\n          diverseExamples.splice(diverseExamples.indexOf(leastDiversity), 1);\n        }\n        //update diversity for each element\n        size = diverseExamples.length;\n        diverseExamples.forEach((example)=>{\n          example.diversity =\n            example.diversity * (size / (size + 1)) +\n            exampleCST.diversity / (size + 1);\n        });\n        averageDiversity =\n          averageDiversity * (size / (size + 1)) +\n          exampleDiversity/ (size + 1);\n        diverseExamples.push(exampleCST);\n      }\n\n      numSeen++;\n    }\n\n    diverseExamples\n      .map(i=>i.originalText)\n      .map(makeExample).forEach(exampleNode =>{\n      node.appendChild(exampleNode);\n    });\n  }\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", function(){\n  setGeneratedExamples(\"Exp\");\n\n  document.querySelector(\"input#exampleInput\").addEventListener(\"keyup\", function(e){\n    if(e.code === \"Enter\"){\n      var example = document.querySelector(\"#exampleInput\").value;\n      exampleChanged(example);\n    }\n  });\n\n  $('rule choice').mouseover(function(){\n    let ruleName = $(this).closest('rule').children('name').text();\n    let caseName = $(this).find('casename');\n    if(caseName.length > 0){\n      ruleName += \"_\"+caseName.text();\n    } else if($(this).closest('rule').find('alt').get()[0].children.length > 1){\n      ruleName = $(this).find('app').text();\n    }\n\n    // setRelevantExamples(ruleName);\n    setGeneratedExamples(ruleName);\n  });\n\n  $('rule > name').mouseover(function(){\n    let ruleName = $(this).text();\n    // setRelevantExamples(ruleName);\n    setGeneratedExamples(ruleName);\n  });\n\n  $('action').mouseover(function(){\n    let ruleName = $(this).attr('ruleId');\n    setGeneratedExamples(ruleName);\n  });\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/exampleGeneration/generators.js\n ** module id = 14\n ** module chunks = 0\n **/","//an implementation of pq distance as shown in\n//  Augsten, Nikolaus, Michael Bohlen, and Johann Gamper. \"Approximate Tree Matching with pq-Grams.\"\nfunction distance_pq(a, b, label = \"label\", p=2, q=3){\n  //sets of pq labels\n  let profilea = pq_profile(a, p, q, label),\n      profileb = pq_profile(b, p, q, label);\n\n  let intersectionSize = 0;\n  seen = [];\n  profilea.forEach(ai=>{\n    if(profileb.find((bi)=> pq_equal(bi,ai)) &&\n       !seen.find((i)=>pq_equal(ai, i))\n      ){\n      let freqa = profilea.filter(i=> pq_equal(i, ai)).length;\n      let freqb = profileb.filter(i=> pq_equal(i, ai)).length;\n      intersectionSize += Math.min(freqa, freqb);\n      seen.push(ai);\n    }\n  });\n\n  let unionSize = profilea.length + profileb.length;\n\n  return 1 - 2*(intersectionSize / unionSize);\n}\n\n//mean square distance\nfunction diversity(example, set, label = \"label\", distance = distance_pq){\n  let diversity = 0;\n  set.forEach((item)=>{\n    diversity += Math.pow(distance(item, example, label), 2);\n  });\n  diversity /= set.length;\n\n  return diversity;\n}\n\nfunction entropy(set, label = \"label\"){\n  let buckets = {};\n\n  set.forEach((item)=>{\n    if(!buckets.hasOwnProperty(item[label])){\n      buckets[item[label]] = 0;\n    }\n    buckets[item[label]]++;\n  });\n\n  let sum = Object.keys(buckets).reduce((agg, key)=> agg + buckets[key], 0);\n\n  let proportions = Object.keys(buckets).map((key)=> buckets[key]/sum);\n  console.log(proportions);\n  return -proportions.map((p)=> p * Math.log(p)).reduce((a,b)=> a+b, 0);\n}\n\nif(typeof module !== \"undefined\" && typeof module.exports !== \"undefined\"){\n  module.exports = {\n    distance_pq,\n    diversity,\n    entropy\n  };\n} else {\n  window.distance_pq = distance_pq;\n  window.diversity = diversity;\n  window.entropy = entropy;\n}\n\n\n\n\n//PQ DISTANCE HELPERS\n\nfunction pq_profile(root, p, q, label){\n  let profile = [];\n  let ancestors = makeArray(p);\n  profile = profile_helper(root, p, q, profile, ancestors, label);\n  return profile;\n}\n\nfunction profile_helper(/*tree,*/ node, p, q, profile, ancestors, label){\n  ancestors = pq_shift(ancestors, node[label]);\n  let siblings = makeArray(q);\n\n  if(node.children && node.children.length > 0){\n    node.children.forEach((child)=>{\n      siblings = pq_shift(siblings, child[label]);\n      profile = profile.concat([ancestors.concat(siblings)]);\n      profile = profile_helper(child, p, q, profile, ancestors, label);\n    })\n  } else { //LEAF\n    profile = profile.concat([ancestors.concat(siblings)]);\n  }\n\n  return profile;\n}\n\nfunction pq_shift(array, item){\n  array.shift();\n  array.push(item);\n  return array;\n}\n\nfunction makeArray(length){\n  var array = [];\n  for(let i=0; i<length; i++, array.push(null));\n  return array;\n}\n\nfunction pq_equal(tuplea, tupleb){\n  return tuplea.map((la,i)=> la === tupleb[i]).reduce((a,b)=> a && b, true);\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/exampleGeneration/diversity.js\n ** module id = 15\n ** module chunks = 0\n **/"],"sourceRoot":""}
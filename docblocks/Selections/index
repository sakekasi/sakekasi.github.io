# Selections

A **selection** is an array of elements pulled from the current document. D3 uses [CSS3](http://www.w3.org/TR/css3-selectors/) to select elements. For example, you can select by tag  ("div"), class (".awesome"), unique identifier ("#foo"), attribute ("[color=red]"), or containment ("parent child"). Selectors can also be intersected (".this.that" for logical AND) or unioned (".this, .that" for logical OR). If your browser doesn't support selectors natively, you can include [Sizzle](http://sizzlejs.com/) before D3 for backwards-compatibility.

After selecting elements, you apply **operators** to them to do stuff. These operators can get or set [attributes](docblocks/Selections/Operating_on_Selections/Content/selection.attr), [styles](docblocks/Selections/Operating_on_Selections/Content/selection.style), [properties](docblocks/Selections/Operating_on_Selections/Content/selection.property), [HTML](docblocks/Selections/Operating_on_Selections/Content/selection.html) and [text](docblocks/Selections/Operating_on_Selections/Content/selection.text) content. Attribute values and such are specified as either constants or functions; the latter are evaluated for each element. You can also join selections to [data](docblocks/Selections/Operating_on_Selections/Data/selection.data); this data is available to operators for data-driven transformations. In addition, joining to data produces [enter](docblocks/Selections/Operating_on_Selections/Data/selection.enter) and [exit](docblocks/Selections/Operating_on_Selections/Data/selection.exit) subselections, so that you may [add](docblocks/Selections/Operating_on_Selections/Content/selection.append) or [remove](docblocks/Selections/Operating_on_Selections/Content/selection.remove) elements in response to changes in data.

You won't generally need to use `for` loops or recursive functions to modify the document with D3. That's because you operate on entire selections at once, rather than looping over individual elements. However, you can still loop over elements manually if you wish: there's an [each](docblocks/Selections/Operating_on_Selections/Control/selection.each) operator which invokes an arbitrary function, and selections are arrays, so elements can be accessed directly (e.g., `selection[0][0]`). D3 supports method chaining for brevity when applying multiple operators: the operator return value is the selection.
